version: '3'

services:
  postgresql:
    image: postgres:12
    volumes:
      - ${PWD}/server/postgresql/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    command: ["postgres", "-c", "log_statement=all"]
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB:       faces
      POSTGRES_USER:     faces
      POSTGRES_PASSWORD: faces

  mosquitto:
    image: eclipse-mosquitto:2.0.12
    volumes:
      - ${PWD}/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro

  server:
    image: face-recognition
    build:
      context: server
      args:
        PIP_ENV: development
    depends_on:
      - postgresql
      - mosquitto
    environment:
      # Development
      APP_ENV: 'development'
      APP_DEBUG: 'true'
      APP_PREFIX: '/api'

      # PostgreSQL
      DB_HOST: postgresql
      DB_USER: faces
      DB_PASS: faces
      DB_NAME: faces

      # MQTT
      MQTT_HOST: mosquitto
      MQTT_PORT: 1883
      MQTT_USER: ''
      MQTT_PASS: ''
      MQTT_PREFIX: 'face-recognition'
    volumes:
      - ${PWD}/server:/usr/src
      - ${PWD}/server/data:/data

  frontend:
    image: face-recognition-frontend
    build:
      context: frontend
      target: devel-stage
    volumes:
    - ./frontend:/app
    environment:
      NPM_CONFIG_PREFIX: /tmp
    command: sh -c 'npm install && npm install --only=dev && npm start'
    ports:
    - 4200

  nginx:
    image: nginx
    depends_on:
      - server
      - frontend
    volumes:
      - ${PWD}/server/data:/data
      - ${PWD}/server/coverage_html:/coverage:ro
      - ${PWD}/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 8080:80
